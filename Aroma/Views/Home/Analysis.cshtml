@model eUseControl.Web.Models.RiskLevel

@{
    Layout = "~/Views/Shared/_LayoutAnalysis.cshtml";
    ViewBag.Title = "Analysis";
}

<style>
    /* Стили для улучшения внешнего вида */
    body {
        font-family: Arial, sans-serif;
        background-color: #f5f5f5;
        color: #333;
        margin: 0;
        padding: 0;
    }

    h2 {
        color: #007bff;
    }

    ul {
        list-style-type: none;
        padding: 0;
    }

    li {
        margin-bottom: 20px;
        padding: 10px;
        background-color: #fff;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    strong {
        color: #007bff;
    }

    canvas {
        margin-top: 20px;
    }
</style>

<h2>Risk Analysis Based on Questionnaire</h2>

@{
    int count = Convert.ToInt32(Session["Count"]);
    List<string> questions = ViewBag.Questions;
    List<eUseControl.Web.Models.RiskLevel> answers = ViewBag.RiskLevels;
    List<eUseControl.Web.Models.RiskLevel> riskLevels = ViewBag.RiskLevels;
}

<div>
    <h3>Questions and Answers:</h3>
    <ul>
        @for (int i = 0; i < count; i++)
        {
            <li>
                <strong>@questions[i]</strong><br />
                Answer: @answers[i].Answer<br />
                Risk Level: @riskLevels[i].Level
            </li>
        }
    </ul>
</div>

<div>
    <h3>Risk Reduction Recommendations:</h3>
    <ul>
        @foreach (var recommendation in ViewBag.Recommendations)
        {
            <li>@recommendation</li>
        }
    </ul>
</div>

<!-- Элемент canvas для графика с использованием Chart.js -->
<canvas id="riskChart" width="400" height="400"></canvas>

<!-- JavaScript код для создания графика -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    var ctx = document.getElementById('riskChart').getContext('2d');
    var chartData = {
        labels: [@foreach (var question in questions) { @Html.Raw(Json.Encode(question)) }],
        datasets: [{
            label: 'Risk Levels',
            data: [@foreach (var level in riskLevels) { @Html.Raw(Json.Encode(level.Level)) }],
            backgroundColor: 'rgba(255, 99, 132, 0.5)',
            borderColor: 'rgba(255, 99, 132, 1)',
            borderWidth: 1
        }]
    };

    var riskChart = new Chart(ctx, {
        type: 'bar',
        data: chartData,
        options: {
            responsive: true,
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        }
    });
</script>
