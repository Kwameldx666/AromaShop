
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_LayoutRegister.cshtml";
}

@model Lab_TW.Models.RegisterData

<div class="container">
    <div class="row">
        <div class="col-lg-6">
            <div class="login_box_img">
                <div class="hover">
                    <h4>Already have an account?</h4>
                    <p>There are advances being made in science and technology everyday, and a good example of this is the</p>
                    <a class="button button-account" href="Login">Login Now</a>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="login_form_inner register_form_inner">
                <h3>Create an account</h3>

                @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { id = "register_form", @class = "row login_form" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="col-md-12 form-group">
                        @Html.TextBoxFor(m => m.Username, new { @class = "form-control", placeholder = "Username", Id = "name" })
                        @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-12 form-group">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Email Address ", Id = "email" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-12 form-group">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Password", Id = "pass" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-12 form-group">
                        @Html.PasswordFor(m => m.AcceptPassword, new { @class = "form-control", placeholder = "Confirm Password", Id = "pass2" })
                        @Html.ValidationMessageFor(m => m.AcceptPassword, "", new { @class = "text-danger" })
                    </div>

                    if (!string.IsNullOrEmpty(ViewBag.ErrorPassword))
                    {
                        <div class="col-md-12 form-group text-center">
                            <span id ="error" class="text-danger">@ViewBag.ErrorPassword</span>
                        </div>
                    }

                    <div class="col-md-12 form-group">
                        <button type="submit" class="button button-register w-100">Register</button>
                    </div>
                }

                <div class="col-md-12 form-group">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
</div>

<script>

   document.getElementById("register_form").addEventListener("submit", function (event) {
    var el = document.getElementById('register_form');
    var name = el.name.value;
    var email = el.email.value;
    var password = el.pass.value;
    var repass = el.pass2.value;
    var errorMessage = "";

       if (name.length == 0) {
           errorMessage += "Пожалуйста заполните поле имени.<br>"
       }
       if (email.length == 0) {
           errorMessage += "Пожалуйста заполните поле email!<br>"
       }
       if (password.length == 0) {
           errorMessage += "Пожалуйста введите пароль.<br>"
       }
       if (repass.length == 0) {
           errorMessage += "Ведите повторный пароль.<br>"
       }
       else {
           if (name.length < 4) {
               errorMessage += "Некорректная длина имени (минимум 4 символа).<br>";
           }

           if (name.length > 20) {
               errorMessage += "Некорректная длина имени (максимум 20 символов).<br>";
           }

           if (password.length < 8) {
               errorMessage += "Слишком короткий пароль (минимум 8 символов).<br>";
           } else {

                  var emailPattern = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
               if (!emailPattern.test(email)) {
                     errorMessage += "Некорректный формат email.<br>";
               }

               if (!/[A-Z]/.test(password)) {
                   errorMessage += "Пароль должен содержать хотя бы одну заглавную букву.<br>";
               }

               if (!/[!#$%^@@&*]/.test(password)) {
                   errorMessage += "Пароль должен содержать хотя бы один специальный символ (!#$%^&*).<br>";
               }

               if (!/[0-9]/.test(password)) {
                   errorMessage += "Пароль должен содержать хотя бы одну цифру.<br>";
               }
           }

           if (password !== repass) {
               errorMessage += "Пароли не совпадают.<br>";
           }
       }

    if (errorMessage !== "") {
        document.getElementById("error").innerHTML = errorMessage;
        event.preventDefault(); // Предотвращаем отправку формы
    }
});

</script>