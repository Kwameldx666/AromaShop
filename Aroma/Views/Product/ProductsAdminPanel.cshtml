@model List<Lab_TW.Models.Product>

@{
    ViewBag.Title = "ProductsAdminPanel";
    Layout = "~/Views/Shared/_LayoutProductAdminPanel.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
        }

        .container {
            width: 100%;
            padding: 20px;
        }

        .add-product-btn {
            margin-bottom: 20px;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            cursor: pointer;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }

        th {
            background-color: #f2f2f2;
        }

        .action-btn {
            padding: 5px 10px;
            color: white;
            border: none;
            cursor: pointer;
        }

        .edit-btn {
            background-color: #008CBA;
        }

        .delete-btn {
            background-color: #f44336;
        }
    </style>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            $('.edit-btn').click(function (e) {
                e.preventDefault();
                var $row = $(this).closest('tr');
                var $tds = $row.find('td').not(':last');
                var id = $row.data('id'); // Убедитесь, что в вашем HTML есть атрибут data-id для строки

                if ($(this).text() === 'Edit') {
                    $.each($tds, function () {
                        var txt = $(this).text();
                        $(this).html($('<input>', { value: txt, type: 'text' }));
                    });
                    $(this).text('Save');
                } else {
                    var updatedValues = $tds.find('input').map(function () {
                        return $(this).val();
                    }).get();

                    // Подготавливаем данные для отправки
                    var productData = {
                        Id: id,
                        Name: updatedValues[0],
                        Description: updatedValues[1],
                        Price: updatedValues[2],
                        ProductType: updatedValues[3] // Убедитесь, что порядок значений соответствует вашим столбцам
                    };

                    // AJAX-запрос для отправки обновленных данных на сервер
                    $.ajax({
                        url: '/Product/UpdateProduct', // Убедитесь, что URL соответствует вашему методу в контроллере
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(productData),
                        success: function (response) {
                            if (response.success) {
                                // Здесь обработка успешного обновления
                                alert('Продукт успешно обновлен');
                            } else {
                                // Обработка ошибок обновления
                                alert('Ошибка обновления продукта');
                            }
                        },
                        error: function () {
                            // Обработка ошибок связи с сервером
                            alert('Ошибка связи с сервером');
                        }
                    });

                    $.each($tds, function (i, el) {
                        var input = $(this).find('input');
                        $(this).text(input.val());
                    });
                    $(this).text('Edit');
                }
            });
        });

    </script>
</head>
<body>
    <div class="container">
        <form action="@Url.Action("AddProduct", "Product")" method="get">
            <button type="submit" class="add-product-btn">Add Product</button>
        </form>

        <!-- Таблица продуктов -->
        <table>
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Price</th>
                    <th>Product Type</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var product in Model)
                {
                    <tr>
                        <td>@product.Name</td>
                        <td>@product.Description</td>
                        <td>@product.Price</td>
                        <td>@product.ProductType</td>
                        <td>
                            <a class="action-btn edit-btn" href="#">Edit</a> <!-- Изменил на # для предотвращения перехода -->
                            @using (Html.BeginForm("DeleteProduct", "Product", new { id = product.Id }, FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()
                                <button type="submit" class="action-btn delete-btn" onclick="return confirm('Вы уверены, что хотите удалить этот товар?');">Delete</button>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</body>
</html>